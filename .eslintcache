[{"D:\\laCapsule\\portfolio\\gsap-collection\\src\\index.js":"1","D:\\laCapsule\\portfolio\\gsap-collection\\src\\reportWebVitals.js":"2","D:\\laCapsule\\portfolio\\gsap-collection\\src\\App.js":"3","D:\\laCapsule\\portfolio\\gsap-collection\\src\\CollectionScreen\\CollectionScreen.js":"4","D:\\laCapsule\\portfolio\\gsap-collection\\src\\data.js":"5","D:\\laCapsule\\portfolio\\gsap-collection\\src\\Components\\CustomBtn.js":"6","D:\\laCapsule\\portfolio\\gsap-collection-ts\\src\\index.tsx":"7","D:\\laCapsule\\portfolio\\gsap-collection-ts\\src\\App.tsx":"8","D:\\laCapsule\\portfolio\\gsap-collection-ts\\src\\CollectionScreen\\CollectionScreen.tsx":"9","D:\\laCapsule\\portfolio\\gsap-collection-ts\\src\\data.tsx":"10","D:\\laCapsule\\portfolio\\gsap-collection-ts\\src\\Components\\CustomBtn.tsx":"11"},{"size":478,"mtime":1611304099951,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":210,"mtime":1612776236354,"results":"15","hashOfConfig":"13"},{"size":4758,"mtime":1612880498388,"results":"16","hashOfConfig":"13"},{"size":4494,"mtime":1611331167542,"results":"17","hashOfConfig":"13"},{"size":673,"mtime":1612893734975,"results":"18","hashOfConfig":"13"},{"size":443,"mtime":1613656318984,"results":"19","hashOfConfig":"20"},{"size":211,"mtime":1613489822307,"results":"21","hashOfConfig":"20"},{"size":5189,"mtime":1620639906355,"results":"22","hashOfConfig":"20"},{"size":4494,"mtime":1613487079220,"results":"23","hashOfConfig":"20"},{"size":1103,"mtime":1613656082676,"results":"24","hashOfConfig":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"dvquqx",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"16lmedl",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},"D:\\laCapsule\\portfolio\\gsap-collection\\src\\index.js",[],["51","52"],"D:\\laCapsule\\portfolio\\gsap-collection\\src\\reportWebVitals.js",[],"D:\\laCapsule\\portfolio\\gsap-collection\\src\\App.js",[],"D:\\laCapsule\\portfolio\\gsap-collection\\src\\CollectionScreen\\CollectionScreen.js",["53"],"import React, { useState, useEffect, useRef, useMemo } from 'react'\r\nimport CustomBtn from '../Components/CustomBtn';\r\nimport {data} from '../data'\r\nimport {gsap} from 'gsap'\r\n\r\n\r\nfunction CollectionScreen() {\r\n    \r\n    const smallImgRef = useRef();\r\n    const imageBoxRef = useRef();\r\n\r\n    const rightImgRef = useRef();\r\n    const rightBgRef = useRef();\r\n\r\n    const titreRef = useRef();\r\n    const sousTitreRef = useRef();\r\n\r\n    const [sliderPos, setSliderPos] = useState(0);\r\n    const t1 = useMemo(()=>gsap.timeline(),[]);\r\n    const t2 = useMemo(()=>gsap.timeline(),[]);\r\n    const t3 = useMemo(()=>gsap.timeline(),[]);\r\n    const t4 = useMemo(()=>gsap.timeline(),[]);\r\n    \r\n\r\n    \r\n    let manageClick = (num) => {\r\n        let newPos = 0;\r\n        if ((sliderPos+num)<0) { newPos = data.length-1 ;}\r\n        else if ((sliderPos+num)>(data.length-1)) { newPos = 0 ;}\r\n        else {newPos = sliderPos+num;}\r\n\r\n        console.log(t2.isActive());\r\n        if(!t2.isActive()&&!t3.isActive()){\r\n            t1.clear();\r\n            t1.to(smallImgRef.current, {\r\n                duration:0,\r\n                transform: 'translateY(2rem)',\r\n                clipPath: 'polygon(0% 100%, 0% 100%, 100% 100%, 100% 100%)'\r\n            })\r\n            .to(smallImgRef.current, {\r\n                duration:0,\r\n                delay:0.4,\r\n                transform: 'translateY(2rem)',\r\n                clipPath: 'polygon(0% 80%, 0% 100%, 100% 100%, 100% 100%)'\r\n            })\r\n            .to(smallImgRef.current, {\r\n                duration:0.3,\r\n                transform: 'translateY(0px)',\r\n                clipPath: 'polygon(0% -1%, 0% 100%, 100% 100%, 100% -1%)'\r\n            }).to(imageBoxRef.current,{\r\n                duration:0,\r\n                backgroundImage:`url('${data[newPos].url}')`\r\n            }).pause()\r\n\r\n            t2.clear()\r\n            t2.to(rightImgRef.current, {\r\n                duration:0,\r\n                transform: 'translateX(50vw)'\r\n            }).to(rightImgRef.current, {\r\n                duration:0.2,\r\n                ease: \"power2.in\",\r\n                transform: 'translateX(45vw)'\r\n            })\r\n            .to(rightImgRef.current, {\r\n                duration:0.6,\r\n                ease: \"power2.out\",\r\n                transform: 'translateX(0vw)'\r\n            }).to(rightBgRef.current,{\r\n                duration:0,\r\n                backgroundImage:`url('${data[newPos].url}')`\r\n            }).pause()\r\n\r\n            t4.clear()\r\n            t4.to(titreRef.current,{\r\n                duration:0.2,\r\n                transform: 'translateY(0rem) rotateX(0deg)',\r\n                opacity:1\r\n            }).to(sousTitreRef.current,{\r\n                duration:0.2,\r\n                transform: 'translateY(0rem) rotateX(0deg)',\r\n                opacity:1\r\n            }).pause()\r\n\r\n            t3.clear()\r\n            t3.to(sousTitreRef.current,{\r\n                duration:0.2,\r\n                transform: 'translateY(2rem) rotateX(60deg)',\r\n                opacity:0\r\n            }).to(titreRef.current,{\r\n                duration:0.2,\r\n                transform: 'translateY(2rem) rotateX(60deg)',\r\n                opacity:0,\r\n                onComplete:()=>{\r\n                    setSliderPos(newPos);\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        t1.restart();\r\n        t2.restart();\r\n        t4.restart();\r\n    }, [sliderPos])\r\n        \r\n        return (\r\n            <div id=\"main\">\r\n            <div className=\"leftSection\" style={{backgroundColor:data[sliderPos].color}}>\r\n                <div className=\"blackFilter\"></div>\r\n                <div>\r\n                    <CustomBtn manageClick={manageClick} deltaPos={-1} text='Previous' />\r\n                    <CustomBtn manageClick={manageClick} deltaPos={1} text='Next' />\r\n                </div>\r\n                <div>\r\n                    <div id=\"imageBox\" ref={imageBoxRef} style={{backgroundImage:`url('${data[0].url}')`}}>\r\n                        <img id=\"smallImg\" src={data[sliderPos].url} ref={smallImgRef} alt=\"\"/>\r\n                    </div>\r\n                    <h3 ref={titreRef}>{data[sliderPos].name} </h3>\r\n                    <p ref={sousTitreRef}>{data[sliderPos].desc} </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"rightSection\" ref={rightBgRef} style={{backgroundImage:`url('${data[0].url}')`}}>\r\n                <img ref={rightImgRef} src={data[sliderPos].url} alt=\"\"/>\r\n                <div className=\"blackFilter\"></div>\r\n                <div className=\"textBox\">\r\n                    <h2>Collection</h2>\r\n                    <span>SEE FULL LIST</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CollectionScreen\r\n","D:\\laCapsule\\portfolio\\gsap-collection\\src\\data.js",[],"D:\\laCapsule\\portfolio\\gsap-collection\\src\\Components\\CustomBtn.js",[],"D:\\laCapsule\\portfolio\\gsap-collection-ts\\src\\index.tsx",[],["54","55"],"D:\\laCapsule\\portfolio\\gsap-collection-ts\\src\\App.tsx",[],"D:\\laCapsule\\portfolio\\gsap-collection-ts\\src\\CollectionScreen\\CollectionScreen.tsx",["56"],"D:\\laCapsule\\portfolio\\gsap-collection-ts\\src\\data.tsx",[],"D:\\laCapsule\\portfolio\\gsap-collection-ts\\src\\Components\\CustomBtn.tsx",["57"],"import { TargetElement } from '@testing-library/user-event';\r\nimport React, { useRef } from 'react'\r\n\r\ninterface BtnProps {\r\n    text: string;\r\n    manageClick(a: number): any;\r\n    deltaPos: number;\r\n}\r\n\r\n\r\nfunction CustomBtn({ text, manageClick, deltaPos }: BtnProps) {\r\n\r\n    const btnRef = useRef<HTMLButtonElement>(null);\r\n\r\n    let click = (e: React.MouseEvent) => {\r\n        manageClick(deltaPos);\r\n        let ripple = document.createElement('span');\r\n\r\n        // let target : EventTarget = document.getElementsByClassName('customBtn')[0]\r\n        let target = e.nativeEvent.target;\r\n\r\n        ripple.style.left = (e.nativeEvent.clientX - (target as HTMLButtonElement).offsetLeft) + 'px';\r\n        ripple.style.top = (e.nativeEvent.clientY - (target as HTMLButtonElement).offsetTop) + 'px';\r\n        btnRef.current!.appendChild(ripple);\r\n\r\n        setTimeout(() => btnRef.current!.removeChild(ripple), 1000)\r\n    }\r\n\r\n    return (\r\n        <button className=\"customBtn\" onClick={(e) => { click(e) }} ref={btnRef}>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default CustomBtn\r\n\r\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":105,"column":8,"nodeType":"64","endLine":105,"endColumn":19,"suggestions":"65"},{"ruleId":"58","replacedBy":"66"},{"ruleId":"60","replacedBy":"67"},{"ruleId":"62","severity":1,"message":"63","line":104,"column":8,"nodeType":"64","endLine":104,"endColumn":19,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":23},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 't1', 't2', and 't4'. Either include them or remove the dependency array.","ArrayExpression",["75"],["73"],["74"],["76"],"@typescript-eslint/no-unused-vars","'TargetElement' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"77","fix":"79"},"Update the dependencies array to be: [sliderPos, t1, t2, t4]",{"range":"80","text":"81"},{"range":"82","text":"81"},[3402,3413],"[sliderPos, t1, t2, t4]",[3599,3610]]